/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IAIOracle, IAIOracleInterface } from "../../contracts/IAIOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "modelId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "callbackContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "gasLimit",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "AICallbackRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invoker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "AICallbackResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "modelId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "estimateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "isFinalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "modelId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "callbackContract",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "gasLimit",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "requestCallback",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IAIOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IAIOracleInterface {
    return new Interface(_abi) as IAIOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IAIOracle {
    return new Contract(address, _abi, runner) as unknown as IAIOracle;
  }
}
